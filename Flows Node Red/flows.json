[
    {
        "id": "70654ab43aa27b46",
        "type": "tab",
        "label": "Arduino",
        "disabled": false,
        "info": ""
    },
    {
        "id": "44932af1.ed4f24",
        "type": "tab",
        "label": "Telegram",
        "disabled": false,
        "info": ""
    },
    {
        "id": "08f058cc78e56549",
        "type": "tab",
        "label": "Banco de Dados",
        "disabled": false,
        "info": ""
    },
    {
        "id": "28ee62afe6727ea5",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca1e07a0.6da918",
        "type": "telegram bot",
        "botname": "BOT",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "ae9607b2.345cd8",
        "type": "telegram bot",
        "botname": "vendas",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "57d63a09.9ed904",
        "type": "telegram bot",
        "botname": "vendastdsa_BOT",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "27587226.6fe23e",
        "type": "telegram bot",
        "botname": "vendastdsa_BOT",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "8f1f570d.8afb1",
        "type": "telegram bot",
        "botname": "vendas_TDSA_manha_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "d92e92af.f353f",
        "type": "reddit-credentials",
        "username": "Environmental_Pen574",
        "user_agent": "nodered-test",
        "auth_type": "username_password",
        "name": ""
    },
    {
        "id": "b3fc704e3060ea0d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqttdashboard.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "6806c8d7b1fcb3b6",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "25e2bfc55dd7ce5f",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3cf8c021b88a40c0",
        "type": "ui_group",
        "name": "TAG ID",
        "tab": "25e2bfc55dd7ce5f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "85613a9985390a43",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "f7643d705ecad46d",
        "type": "json",
        "z": "70654ab43aa27b46",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 100,
        "wires": [
            [
                "2104a47aad45061b"
            ]
        ]
    },
    {
        "id": "2104a47aad45061b",
        "type": "mqtt out",
        "z": "70654ab43aa27b46",
        "name": "",
        "topic": "carlos/rafael/iot",
        "qos": "",
        "retain": "",
        "broker": "b3fc704e3060ea0d",
        "x": 480,
        "y": 100,
        "wires": []
    },
    {
        "id": "8ad90842b9b36e9e",
        "type": "mqtt in",
        "z": "28ee62afe6727ea5",
        "name": "",
        "topic": "carlos/rafael/iot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b3fc704e3060ea0d",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "226f9f18a6afc487",
                "61706573.c9fe6c"
            ]
        ]
    },
    {
        "id": "226f9f18a6afc487",
        "type": "function",
        "z": "28ee62afe6727ea5",
        "name": "",
        "func": "\nlet msgCount = context.get(\"msgCount\") || 0;//get remembered count\nlet countMessage = \"\";\nif (msg.payload) {\n    msgCount++; \n}\n\ncountMessage = \"Count of payload 1: \" + msgCount;\n\ncontext.set(\"msgCount\", msgCount); \nnode.status(countMessage);\nlet msgWithCount = { payload: countMessage };\n\nmsg.payload = msgCount;\n\nreturn msg;\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "fe81d9ce6547276c"
            ],
            []
        ]
    },
    {
        "id": "5a0e406d6f08d47e",
        "type": "mqtt in",
        "z": "08f058cc78e56549",
        "name": "",
        "topic": "carlos/rafael/iot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b3fc704e3060ea0d",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "88e3dcd9.ce4f8"
            ]
        ]
    },
    {
        "id": "abb38b0b474b9a44",
        "type": "ui_text",
        "z": "28ee62afe6727ea5",
        "group": "3cf8c021b88a40c0",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TAG Atual",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "fe81d9ce6547276c",
        "type": "ui_gauge",
        "z": "28ee62afe6727ea5",
        "name": "",
        "group": "3cf8c021b88a40c0",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Usos do Sistema",
        "label": "Quantidade de Usos",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 490,
        "y": 340,
        "wires": []
    },
    {
        "id": "c8e51586ed259b2b",
        "type": "serial in",
        "z": "70654ab43aa27b46",
        "name": "",
        "serial": "85613a9985390a43",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "f7643d705ecad46d"
            ]
        ]
    },
    {
        "id": "61706573.c9fe6c",
        "type": "json",
        "z": "28ee62afe6727ea5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "80911448.6a0fd8",
                "d01d4512.a53b98"
            ]
        ]
    },
    {
        "id": "816c2ca1.4df9f",
        "type": "ui_text",
        "z": "28ee62afe6727ea5",
        "group": "3cf8c021b88a40c0",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "80911448.6a0fd8",
        "type": "change",
        "z": "28ee62afe6727ea5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "db42b323.fd48f"
            ]
        ]
    },
    {
        "id": "db42b323.fd48f",
        "type": "function",
        "z": "28ee62afe6727ea5",
        "name": "Aberto/Fechado",
        "func": "if(msg.payload == 90) {\n    msg.payload = \"Fechado\";\n}\nif(msg.payload == 0 || msg.payload == -1) {\n   msg.payload = \"Aberto\";  \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 260,
        "wires": [
            [
                "816c2ca1.4df9f"
            ]
        ]
    },
    {
        "id": "d01d4512.a53b98",
        "type": "change",
        "z": "28ee62afe6727ea5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tagid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "abb38b0b474b9a44"
            ]
        ]
    },
    {
        "id": "88e3dcd9.ce4f8",
        "type": "json",
        "z": "08f058cc78e56549",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "bc2be10e.b7284"
            ]
        ]
    },
    {
        "id": "3a7ca5a0.02deda",
        "type": "http request",
        "z": "08f058cc78e56549",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://spring-iot-api.azurewebsites.net/tag",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bc2be10e.b7284",
        "type": "function",
        "z": "08f058cc78e56549",
        "name": "",
        "func": "msg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nif (msg.payload.status == 0 || msg.payload.status == -1) {\n    msg.payload.status = false;\n}\nif (msg.payload.status == 90) {\n    msg.payload.status = true;\n}\nmsg.payload = {\n    \"tagId\": msg.payload.tagid,\n    \"status\": msg.payload.status\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "3a7ca5a0.02deda"
            ]
        ]
    },
    {
        "id": "15969fa7.46a81",
        "type": "mqtt in",
        "z": "44932af1.ed4f24",
        "name": "",
        "topic": "carlos/rafael/iot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b3fc704e3060ea0d",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "59072119.0a662"
            ]
        ]
    },
    {
        "id": "59072119.0a662",
        "type": "json",
        "z": "44932af1.ed4f24",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "c7342d17.8437b"
            ]
        ]
    },
    {
        "id": "c7342d17.8437b",
        "type": "change",
        "z": "44932af1.ed4f24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "9e488c01.5955b"
            ]
        ]
    },
    {
        "id": "9e488c01.5955b",
        "type": "function",
        "z": "44932af1.ed4f24",
        "name": "Aberta/Fechada",
        "func": "if(msg.payload == 90) {\n    msg.payload = \"fechada\";\n}\nif(msg.payload == 0 || msg.payload == -1) {\n   msg.payload = \"aberta\";  \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 180,
        "wires": [
            [
                "fb608544.3cb108"
            ]
        ]
    },
    {
        "id": "fb608544.3cb108",
        "type": "function",
        "z": "44932af1.ed4f24",
        "name": "Telegram",
        "func": "msg.payload = {\n    chatId :  830269456,\n    type : \"message\",\n    content: \"A porta está \" + msg.payload,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 180,
        "wires": [
            [
                "f1d4172a.068568"
            ]
        ]
    },
    {
        "id": "f1d4172a.068568",
        "type": "telegram sender",
        "z": "44932af1.ed4f24",
        "name": "",
        "bot": "ca1e07a0.6da918",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1030,
        "y": 180,
        "wires": [
            []
        ]
    }
]